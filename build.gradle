/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.9/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

// refreshing/downloading dependencies:
// command > gradlew clean build / gradle clean build
// command > gradlew build --refresh-dependencies / gradle build --refresh-dependencies
// inside eclipse IDE > RMB build.gradle or project in project explorer > Gradle > Refresh Gradle Project
dependencies {
	// https://mvnrepository.com/artifact/org.testng/testng
	// testImplementation group: 'org.testng', name: 'testng', version: '7.10.2' // groovy long version
	testImplementation 'org.testng:testng:7.10.2' // groovy short version
	
	// https://mvnrepository.com/artifact/io.cucumber/cucumber-testng
	testImplementation 'io.cucumber:cucumber-testng:7.20.1'
	
	// https://mvnrepository.com/artifact/io.cucumber/cucumber-java
	implementation 'io.cucumber:cucumber-java:7.20.1'
	
	// https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java
	implementation 'org.seleniumhq.selenium:selenium-java:4.30.0'
	
	// https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-api
	implementation 'org.apache.logging.log4j:log4j-api:2.24.3'
	
	// https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core
	implementation 'org.apache.logging.log4j:log4j-core:2.24.3'
	
	// https://mvnrepository.com/artifact/commons-io/commons-io
	implementation 'commons-io:commons-io:2.18.0'
	
	// https://mvnrepository.com/artifact/com.aventstack/extentreports
	implementation 'com.aventstack:extentreports:5.1.2'
	
	// https://mvnrepository.com/artifact/tech.grasshopper/extentreports-cucumber7-adapter
	implementation 'tech.grasshopper:extentreports-cucumber7-adapter:1.10.1'
}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

// gradle folder, gradlew and gradlew.bat should be present in project root for executing gradlew commands.
// gradlew or gradle wrapper doesn't require gradle to be available/installed locally.
// running all scenarios using command in project root --> gradlew cucumber
// syntax for glue --> --glue, 'Step Definition package', 'Feature file path'
// if gradle is locally installed and configured as system environment path variable then this command can also be used --> gradle cucumber
// command for checking if gradle if locally available --> gradle -v / gradle -version / gradle --version
task cucumber() {
    dependsOn assemble, testClasses
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = [
            '--plugin', 'html:test-output/cucumber-reports/report.html',
            '--plugin', 'com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter:', 
            '--plugin', 'rerun:test-output/failedTests.txt',  
            '--glue', 'stepDefinitions', 'src/test/resources/features',
            '--tags', "${tags}"
            ]
        }
    }
}

// running a scenario/feature tagged with tagName using command in project root --> gradlew cucumberTag -P tags=@tagName
task cucumberTag() {
    dependsOn assemble, testClasses
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = [
            '--plugin', 'pretty',
            '--plugin', 'html:test-output/cucumber-reports/report.html',
            '--plugin', 'com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter:',
            '--glue', 'stepDefinitions', 'src/test/resources/features',
            '--tags', "${tags}"
            ]
        }
    }
}

// running failed tests/scenarios using command in project root --> gradlew cucumber_rerun1
task cucumber_rerun1() {
    dependsOn assemble, testClasses
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = [
            '--plugin', 'pretty',
            '--plugin', 'html:test-output/cucumber-reports/report_rerun.html',
            '--glue', 'stepDefinitions', '@test-output/failedTests.txt'
            ]
        }
    }
}
